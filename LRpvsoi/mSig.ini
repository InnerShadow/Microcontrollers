//=== Генерация отклика в виде пакета импульсов.
BK *
LA KILL *

// Глобальные переменные
DEFINE long oldStat

// Функции пользователя
FUNC void Period( void ) {
  printf( "период = %d\n", states - oldStat );
  oldStat = states;
}

FUNC void Pulse( void ) {
  printf( "импульс = %d\n", states - oldStat );
}

// Сигнальные функции
SIGNAL void Requ0 ( unsigned int beg ) {
  PORT1 = 0FFh;
  twatch( beg );  
  PORT1 ^= 1;
  twatch( 10 );  
  PORT1 ^= 1;
  twatch( 2800 );  
  PORT1 ^= 1;
  twatch( 9 );  
  PORT1 ^= 1;
  twatch( 1000 );  
  PORT1 ^= 1;
  twatch( 10 );  
  PORT1 ^= 1;
  twatch( 5150 );  
  PORT1 ^= 1;
  twatch( 10 );  
  PORT1 ^= 1;
}

// RESET, start
asm c:0
asm sjmp c:30h
// ============
// Main program
asm c:30h
asm orl tmod,#1
asm mov tl0,#0
asm mov th0,#0ffh
asm orl ie,#82h
asm mov r7,#5  
asm jb p1.0,3eh
asm jb p1.0,3eh
asm jb p1.0,3eh
asm jb p1.0,3eh
asm nop
asm nop
asm jnb p1.0,3eh
asm setb tr0
//asm cjne r7,#0,51h  
asm jb tr0,51h  
asm sjmp 3ch
// ====================
// interrupt handler T0, банк 0
asm c:0bh
asm push psw
asm push acc
asm clr tr0
asm mov a,tl0
asm add a,#11
asm mov tl0,a
asm mov a,th0
asm addc a,#0ffh
asm mov th0,a
asm dec r7
asm mov a,r7  
asm jz 23h  
asm setb tr0
asm clr p1.1
//asm nop
asm nop
asm nop
//asm nop
asm setb p1.1
asm pop acc
asm pop psw
asm reti
//
BS c:25h, 1, "Period()"
BS c:29h, 1, "Pulse()"
BS c:2bh, 20

LA (P1 & 0x2) >> 1
LA (PORT1 & 0x1)

Requ0 (450)
/* */
