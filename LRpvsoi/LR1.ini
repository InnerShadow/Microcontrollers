//=== Работа с отладчиком. Начало. ===
// Машинный язык. Цель Mashina 0
//asm add a,r0
//p 1
//asm inc a

//=== Преобразование 8 -> 16 (r5)->(r4:r5)
// MOV  R5,#47
// MOV  A,R5
// RLC  A
// SUBB A,ACC
// MOV  R4,A

/*  * /
// 1 Сценарий, script (r6:r7)
asm C:0
asm mov r7,#-91
asm mov a,r7
asm rlc a
asm subb a,acc
asm mov r6,a
/ *  */

/*  * /
// Два числа. 2 Сценарий
// POWER, RESET
asm C:0
asm sjmp 30h
// =============
// Main programm
asm C:30h
// - отрицательное число
asm mov r3,#8-30-7*2
asm mov a,r3
asm rlc a
asm subb a,acc
asm mov r2,a
// + положительное число
asm mov r5,#7*2+8
asm mov a,r5
asm rlc a
asm subb a,acc
asm mov r4,a
/ *  */

/*  * /
//=== Периодический отклик ===
// 3 Сценарий
// start, POWER, RESET
asm c:0
asm jmp 30h
// Процедура main
asm c:30h
asm orl tmod,#1
asm mov tl0,#0
asm mov th0,#0ffh
asm orl ie,#82h
asm setb tr0
asm jmp 3eh
// Процедура interrupt T0, 1 mks
asm c:0bh
asm push psw
asm mov psw,#8
asm push acc
asm clr tr0
asm mov a,tl0
asm add a,#7
asm mov tl0,a
asm mov a,th0
asm addc a,#0ffh
asm mov th0,a
asm setb tr0
asm clr p1.1
asm setb p1.1
asm pop acc
asm pop psw
asm reti
//
e char c:0=80h,2eh
e char c:3eh=80h,0feh
/*  * /

/*  * /
//=== 4 Сценарий, REQU, ANSW
// start
asm c:0
asm sjmp 30h
// main programm
asm c:30h
asm orl tmod,#1
asm mov tl0,#0
asm mov th0,#0ffh
asm orl ie,#82h
//asm jb p1.0,3ch
asm nop
asm nop
asm nop
asm setb tr0
asm sjmp 41h
// interrupt t0
asm 0bh
asm push psw
asm mov psw,#8
asm push acc
asm clr tr0
asm mov a,tl0
asm add a,#7
asm mov tl0,a
asm mov a,th0
asm addc a,#0ffh
asm mov th0,a
asm setb tr0
asm clr p1.1
asm setb p1.1
asm pop acc
asm pop psw
asm reti
/ *  */

/*  */
//=== 5 Сценарий, BUTTON
// button start
//define button "start","p1.0=0"
define button "start","port1 &= 0xFE"
BK *
LA KILL *

// start
asm c:0
asm sjmp 30h
// main programm
asm c:30h
asm orl tmod,#1
asm mov tl0,#0
asm mov th0,#0ffh
asm orl ie,#82h
asm jb p1.0,3ch
//asm nop
//asm nop
asm nop
asm setb tr0
asm sjmp 41h
// interrupt t0
asm c:0bh
asm push psw
asm mov psw,#8
asm push acc
asm clr tr0
asm mov a,tl0
asm add a,#7
asm mov tl0,a
asm mov a,th0
asm addc a,#0ffh
asm mov th0,a
asm setb tr0
asm clr p1.1
asm setb p1.1
asm pop acc
asm pop psw
asm reti

BS c:24h, 10
LA (p1 & 0x2) >> 1
/*  */

