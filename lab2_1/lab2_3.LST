C51 COMPILER V9.53.0.0   LAB2_3                                                            11/20/2023 19:35:25 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE LAB2_3
OBJECT MODULE PLACED IN lab2_3.OBJ
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE lab2_3.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND CODE LISTINCLUDE SYMBO
                    -LS TABS(2)

line level    source

   1          #include <reg51.h>
   1      =1  /*--------------------------------------------------------------------------
   2      =1  REG51.H
   3      =1  
   4      =1  Header file for generic 80C51 and 80C31 microcontroller.
   5      =1  Copyright (c) 1988-2002 Keil Elektronik GmbH and Keil Software, Inc.
   6      =1  All rights reserved.
   7      =1  --------------------------------------------------------------------------*/
   8      =1  
   9      =1  #ifndef __REG51_H__
  10      =1  #define __REG51_H__
  11      =1  
  12      =1  /*  BYTE Register  */
  13      =1  sfr P0   = 0x80;
  14      =1  sfr P1   = 0x90;
  15      =1  sfr P2   = 0xA0;
  16      =1  sfr P3   = 0xB0;
  17      =1  sfr PSW  = 0xD0;
  18      =1  sfr ACC  = 0xE0;
  19      =1  sfr B    = 0xF0;
  20      =1  sfr SP   = 0x81;
  21      =1  sfr DPL  = 0x82;
  22      =1  sfr DPH  = 0x83;
  23      =1  sfr PCON = 0x87;
  24      =1  sfr TCON = 0x88;
  25      =1  sfr TMOD = 0x89;
  26      =1  sfr TL0  = 0x8A;
  27      =1  sfr TL1  = 0x8B;
  28      =1  sfr TH0  = 0x8C;
  29      =1  sfr TH1  = 0x8D;
  30      =1  sfr IE   = 0xA8;
  31      =1  sfr IP   = 0xB8;
  32      =1  sfr SCON = 0x98;
  33      =1  sfr SBUF = 0x99;
  34      =1  
  35      =1  
  36      =1  /*  BIT Register  */
  37      =1  /*  PSW   */
  38      =1  sbit CY   = 0xD7;
  39      =1  sbit AC   = 0xD6;
  40      =1  sbit F0   = 0xD5;
  41      =1  sbit RS1  = 0xD4;
  42      =1  sbit RS0  = 0xD3;
  43      =1  sbit OV   = 0xD2;
  44      =1  sbit P    = 0xD0;
  45      =1  
  46      =1  /*  TCON  */
  47      =1  sbit TF1  = 0x8F;
  48      =1  sbit TR1  = 0x8E;
  49      =1  sbit TF0  = 0x8D;
  50      =1  sbit TR0  = 0x8C;
  51      =1  sbit IE1  = 0x8B;
  52      =1  sbit IT1  = 0x8A;
  53      =1  sbit IE0  = 0x89;
C51 COMPILER V9.53.0.0   LAB2_3                                                            11/20/2023 19:35:25 PAGE 2   

  54      =1  sbit IT0  = 0x88;
  55      =1  
  56      =1  /*  IE   */
  57      =1  sbit EA   = 0xAF;
  58      =1  sbit ES   = 0xAC;
  59      =1  sbit ET1  = 0xAB;
  60      =1  sbit EX1  = 0xAA;
  61      =1  sbit ET0  = 0xA9;
  62      =1  sbit EX0  = 0xA8;
  63      =1  
  64      =1  /*  IP   */ 
  65      =1  sbit PS   = 0xBC;
  66      =1  sbit PT1  = 0xBB;
  67      =1  sbit PX1  = 0xBA;
  68      =1  sbit PT0  = 0xB9;
  69      =1  sbit PX0  = 0xB8;
  70      =1  
  71      =1  /*  P3  */
  72      =1  sbit RD   = 0xB7;
  73      =1  sbit WR   = 0xB6;
  74      =1  sbit T1   = 0xB5;
  75      =1  sbit T0   = 0xB4;
  76      =1  sbit INT1 = 0xB3;
  77      =1  sbit INT0 = 0xB2;
  78      =1  sbit TXD  = 0xB1;
  79      =1  sbit RXD  = 0xB0;
  80      =1  
  81      =1  /*  SCON  */
  82      =1  sbit SM0  = 0x9F;
  83      =1  sbit SM1  = 0x9E;
  84      =1  sbit SM2  = 0x9D;
  85      =1  sbit REN  = 0x9C;
  86      =1  sbit TB8  = 0x9B;
  87      =1  sbit RB8  = 0x9A;
  88      =1  sbit TI   = 0x99;
  89      =1  sbit RI   = 0x98;
  90      =1  
  91      =1  #endif
   2          #include <stdio.h>
   1      =1  /*--------------------------------------------------------------------------
   2      =1  STDIO.H
   3      =1  
   4      =1  Prototypes for standard I/O functions.
   5      =1  Copyright (c) 1988-2002 Keil Elektronik GmbH and Keil Software, Inc.
   6      =1  All rights reserved.
   7      =1  --------------------------------------------------------------------------*/
   8      =1  
   9      =1  #ifndef __STDIO_H__
  10      =1  #define __STDIO_H__
  11      =1  
  12      =1  #ifndef EOF
  13      =1   #define EOF -1
  14      =1  #endif
  15      =1  
  16      =1  #ifndef NULL
  17      =1   #define NULL ((void *) 0)
  18      =1  #endif
  19      =1  
  20      =1  #ifndef _SIZE_T
  21      =1   #define _SIZE_T
  22      =1   typedef unsigned int size_t;
  23      =1  #endif
C51 COMPILER V9.53.0.0   LAB2_3                                                            11/20/2023 19:35:25 PAGE 3   

  24      =1  
  25      =1  #pragma SAVE
  26      =1  #pragma REGPARMS
  27      =1  extern char _getkey (void);
  28      =1  extern char getchar (void);
  29      =1  extern char ungetchar (char);
  30      =1  extern char putchar (char);
  31      =1  extern int printf   (const char *, ...);
  32      =1  extern int sprintf  (char *, const char *, ...);
  33      =1  extern int vprintf  (const char *, char *);
  34      =1  extern int vsprintf (char *, const char *, char *);
  35      =1  extern char *gets (char *, int n);
  36      =1  extern int scanf (const char *, ...);
  37      =1  extern int sscanf (char *, const char *, ...);
  38      =1  extern int puts (const char *);
  39      =1  
  40      =1  #pragma RESTORE
  41      =1  
  42      =1  #endif
  43      =1  
   3          
   4          #include "fibonacci.c"
   1      =1  
   2      =1  unsigned int fibonacci(unsigned int n) {
   3   1  =1    
   4   1  =1      if (n == 0)
   5   1  =1          return 0;
   6   1  =1      else if (n == 1)
   7   1  =1          return 1;
   8   1  =1  
   9   1  =1      return fibonacci(n - 1) + fibonacci(n - 2);
*** WARNING C265 IN LINE 9 OF fibonacci.c: '_fibonacci': recursive call to non-reentrant function
*** WARNING C265 IN LINE 9 OF fibonacci.c: '_fibonacci': recursive call to non-reentrant function
  10   1  =1  }
   5          
   6          extern unsigned int fibonacci(unsigned int n);
   7          
   8          void main() {
   9   1          unsigned int result;
  10   1      
  11   1          result = fibonacci(5);
  12   1        
  13   1          printf("Result: %u\n", result);
  14   1      
  15   1          while (1);
  16   1      }
C51 COMPILER V9.53.0.0   LAB2_3                                                            11/20/2023 19:35:25 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION L?0008 (BEGIN)
0000 FF                MOV     R7,A
0001 E500        R     MOV     A,n
0003 34FF              ADDC    A,#0FFH
0005 FE                MOV     R6,A
             ; FUNCTION _fibonacci (BEGIN)
                                           ; SOURCE LINE # 2
0006 8E00        R     MOV     n,R6
0008 8F00        R     MOV     n+01H,R7
                                           ; SOURCE LINE # 4
000A E500        R     MOV     A,n+01H
000C 4500        R     ORL     A,n
000E 7003              JNZ     ?C0001
                                           ; SOURCE LINE # 5
0010 FE                MOV     R6,A
0011 FF                MOV     R7,A
0012 22                RET     
0013         ?C0001:
                                           ; SOURCE LINE # 6
0013 E500        R     MOV     A,n+01H
0015 6401              XRL     A,#01H
0017 4500        R     ORL     A,n
0019 7004              JNZ     ?C0003
                                           ; SOURCE LINE # 7
001B FE                MOV     R6,A
001C 7F01              MOV     R7,#01H
001E 22                RET     
001F         ?C0003:
                                           ; SOURCE LINE # 9
001F E500        R     MOV     A,n+01H
0021 24FE              ADD     A,#0FEH
0023 120000      R     LCALL   L?0008
0026 C006              PUSH    AR6
0028 C007              PUSH    AR7
002A E500        R     MOV     A,n+01H
002C 24FF              ADD     A,#0FFH
002E 120000      R     LCALL   L?0008
0031 D0E0              POP     ACC
0033 2F                ADD     A,R7
0034 FF                MOV     R7,A
0035 D0E0              POP     ACC
0037 3E                ADDC    A,R6
0038 FE                MOV     R6,A
                                           ; SOURCE LINE # 10
0039         ?C0002:
0039 22                RET     
             ; FUNCTION _fibonacci (END)

             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 8
                                           ; SOURCE LINE # 11
0000 7F05              MOV     R7,#05H
0002 7E00              MOV     R6,#00H
0004 120000      R     LCALL   _fibonacci
;---- Variable 'result' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 13
0007 7BFF              MOV     R3,#0FFH
0009 7A00        R     MOV     R2,#HIGH ?SC_0
000B 7900        R     MOV     R1,#LOW ?SC_0
C51 COMPILER V9.53.0.0   LAB2_3                                                            11/20/2023 19:35:25 PAGE 5   

000D 8E00        E     MOV     ?_printf?BYTE+03H,R6
000F 8F00        E     MOV     ?_printf?BYTE+04H,R7
0011 120000      E     LCALL   _printf
0014         ?C0005:
                                           ; SOURCE LINE # 15
0014 80FE              SJMP    ?C0005
             ; FUNCTION main (END)

C51 COMPILER V9.53.0.0   LAB2_3                                                            11/20/2023 19:35:25 PAGE 6   

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


size_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
_printf. . . . . . . . . . . . . . . .  EXTERN   CODE   PROC     -----  -----
_fibonacci . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0006H  -----
  n. . . . . . . . . . . . . . . . . .  AUTO     DATA   U_INT    0000H  2
main . . . . . . . . . . . . . . . . .  PUBLIC   CODE   PROC     0000H  -----
  result . . . . . . . . . . . . . . .  * REG *  DATA   U_INT    0006H  2


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     80    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
